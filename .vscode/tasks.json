{
  // See https://go.microsoft.com/fwlink/?LinkId=733558
  // for the documentation about the tasks.json format
  "version": "2.0.0",
  "tasks": [
    {
      "label": "compile sol",

      "type": "shell",
      "command": "g++ -Wshadow -Wall -Weffc++ -Wextra -g ${relativeFileDirname}/sol.cpp -o ${relativeFileDirname}/binary/sol -fsanitize=address -fsanitize=undefined -D_GLIBCXX_DEBUG",

      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": "$gcc"
    },
    {
      "label": "compile brute",
      "type": "shell",
      "command": "g++ -Wshadow -Wall -Weffc++ -Wextra -g ${relativeFileDirname}/brute.cpp -o ${relativeFileDirname}/binary/brute -fsanitize=address -fsanitize=undefined -D_GLIBCXX_DEBUG",
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": "$gcc"
    },
    {
      "label": "compile test",
      "type": "shell",
      "command": "g++ -Wshadow -Wall -Weffc++ -Wextra -g ${relativeFileDirname}/test.cpp -o ${relativeFileDirname}/binary/test -fsanitize=address -fsanitize=undefined -D_GLIBCXX_DEBUG",
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": "$gcc"
    },
    {
      "label": "test solution",
      "type": "shell",
      "command": "bash ${workspaceFolder}/testing/test.sh ${relativeFileDirname}",
      "dependsOn": ["compile sol", "compile brute", "compile test"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": "$gcc"
    },
    {
      "label": "test script",
      "type": "shell",
      "dependsOn": ["Client Build", "Server Build"],
      "command": "bash ${workspaceFolder}/testing/test.sh ${relativeFileDirname}",
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": "$gcc"
    },

    {
      "label": "run code",
      "type": "shell",
      "command": "g++ -Wshadow -Wall -Weffc++ -Wextra -g ${file} -o ${workspaceFolder}/binary/${fileBasenameNoExtension} -fsanitize=address -fsanitize=undefined -D_GLIBCXX_DEBUG && ${workspaceFolder}/binary/${fileBasenameNoExtension}",
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": "$gcc"
    }
  ]
}
